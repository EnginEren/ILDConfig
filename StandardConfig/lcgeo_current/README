###################################################
#
# HOWTO run Mokka and Marlin examples
# with standard configuration
# 
# F.Gaede, DESY
#   12/2011: F.G.: updated to new ILD_01_dev model 
#   06/2012: J.E.: updated to new ILD_o{1,2,3}_v01 models
###################################################

#  These little examples server as an ultra quick introduction on 
#  how to run ilcsoft programs and as a mini-test after installation
#  of a new (complete) ilcsoft release.
#
#  Have a look at the scripts (mokka-wrapper.sh) and the
#  steering files (bbudsc_3evt_stdreco.xml) for more details.
# 


# 1. ----  initialize the current ilcsoft release, e.g.  ------

  source /afs/desy.de/project/ilcsoft/sw/x86_64_gcc41_sl5/v01-17-04/init_ilcsoft.sh
or
  source /afs/desy.de/project/ilcsoft/sw/x86_64_gcc44_sl6/v01-17-04/init_ilcsoft.sh

#-- this sets:  
#   MARLIN_DLL=libMarlinReco.so:libPandoraAnalysis.so:libMarlinPandora.so:libLCFIVertex.so:libCEDViewer.so:libEutelescope.so:libMarlinTPC.so:libOverlay.so
#-- so these packages need to be present in the release for the standard examples

# 2. ---- run a Mokka example  ------
 a)

  # init MokkaDBConfig (this sets MOKKA_DUMP_FILE and adds mokka-wrapper.sh to your PATH)
  . ../../MokkaDBConfig/init.sh

  mokka-wrapper.sh -U -M ILD_o1_v05 bbudsc_3evt.steer

# b)
#  the above starts a MySQL server and populates it with a dump of the Mokka central DB
#  you can also run Mokka directly (using the central DB):

  Mokka -U -M ILD_o1_v05 bbudsc_3evt.steer

 ## to test a newer model, you have to use Mokka directly to access the database; e.g.:
  
  Mokka -U -M ILD_o1_v06 bbudsc_3evt.steer

  
# c) 
#  to make sure that the extra partice tables (for SUSY etc) is loaded: 
 
  Mokka -U -M ILD_o1_v05 -e ./particle.tbl bbudsc_3evt.steer
  # OR:
  mokka-wrapper.sh -U -M ILD_o1_v05 -e ./particle.tbl bbudsc_3evt.steer


#--   this creates the file:    bbudsc_3evt.slcio

#- example: examine the collections in the file:

  anajob bbudsc_3evt.slcio



# 3. ----  reconstruct these events:  ------

  Marlin bbudsc_3evt_stdreco.xml


#-- creates:   bbudsc_3evt_REC.slcio 
#   and        bbudsc_3evt_DST.slcio

#- example: dump the details of the 2nd event in the DST file: 

   dumpevent bbudsc_3evt_DST.slcio 2 | less

# 3.1 ---- alternative reconstrunction steering files: ------
# -- they substitute std silicon tracking with new algorithms --
# -- Attention! still experimental --

  Marlin FPCCDTracker_stdreco.xml
# -- Adding Marlin steering file which runs the FPCCD tracking algorithm --
# -- Experimental - not yet fully validated --

  Marlin minivector_reco.xml
# -- Adding a reconstruction file which uses a mini-vector algorithm, based on cellular automaton tools, --
# -- for pattern recognition at the VXD-SIT --
# -- still experimental - not fully validated --
# -- According to the examined VXD design, the user should set the proper time resolution for pair bkg overlay --
# -- and correct accordingly for spatial resolution at the VXDPlanarDigiProcessor --
   

# 4. ---- view the result in the event display
 
# a) 

#--- start the event display (server) first: 
  
   glced &


#--- view rec or DST events:

   Marlin bbudsc_3evt_viewer.xml

   Marlin bbudsc_3evt_viewerDST.xml

 
# b)  (new in v01-10) 
  
# or start both, glced and Marlin in one go:

 ced2go   -d GearOutput.xml  bbudsc_3evt_REC.slcio

